name: tests
on:
  push:
    branches-ignore:
      # Once thing had been pushed to master branch, tests have already had to run and
      # pass so no need to run them again
      - "master"
      # No tests are needed or possible on this branch
      - "gh-pages"

jobs:

  # Run test on plain, pure Python implementation (without C++ extension)
  tests_no_cpp_extension:
    name: tests without C++ extension
    runs-on: ubuntu-latest
    strategy:
      matrix:
        python-version: ["3.9", "3.10"]
    env:
      SOKOENGINEPYEXT_SKIP: true

    steps:
      - uses: actions/checkout@v3

      - name: set up Python ${{ matrix.python-version }}
        uses: actions/setup-python@v4
        with:
          python-version: ${{ matrix.python-version }}
          cache: 'pip'
          cache-dependency-path: src/sokoenginepy/game/coordinate_helpers.py

      - name: ensure pip and wheel are at latest version
        run: pip install --upgrade pip wheel

      - name: install sokoenginepy
        run: pip -v install -e .[tests]

      - name: run tests
        run: pytest


  # Build sokoenginepyext C++ extension through pip and run tests against C++ code.
  # Note: this job ID must contain string "with_cpp_extension"
  tests_with_cpp_extension:
    name: tests with C++ extension
    runs-on: ubuntu-latest
    strategy:
      matrix:
        python-version: ["3.9", "3.10"]

    steps:
      - uses: actions/checkout@v3

      - name: setup vcpkg
        uses: lukka/run-vcpkg@v10
        with:
          vcpkgDirectory: "${{ github.workspace }}/vcpkg"
          vcpkgGitCommitId: "4826ede84084395b0f87476e48ff6d4070eba0e4"
          appendedCacheKey: "pip_build_${{ matrix.python-version }}"

      - name: set up Python ${{ matrix.python-version }}
        uses: actions/setup-python@v4
        with:
          python-version: ${{ matrix.python-version }}
          cache: 'pip'
          cache-dependency-path: src/sokoenginepy/game/mover.py

      - name: ensure pip and wheel are at latest version
        run: pip install --upgrade pip wheel

      - name: install sokoenginepy with C++ extension
        env:
          CMAKE_TOOLCHAIN_FILE: "${{ github.workspace }}/vcpkg/scripts/buildsystems/vcpkg.cmake"
        run: pip -v install -e .[tests]

      - name: run tests
        run: pytest


  # Generate and upload tests coverage
  coverage:
    name: tests coverage
    runs-on: ubuntu-latest
    needs: tests_no_cpp_extension
    env:
      SOKOENGINEPYEXT_SKIP: true

    steps:
      - uses: actions/checkout@v3

      - name: set up Python 3.10
        uses: actions/setup-python@v4
        with:
          python-version: "3.10"
          cache: 'pip'
          cache-dependency-path: src/sokoenginepy/game/pusher_step.py

      - name: ensure pip and wheel are at latest version
        run: pip install --upgrade pip wheel

      - name: install sokoenginepy
        run: pip install -e .[tests]

      - name: generate coverage data
        run: coverage run -m pytest

      - name: generate coverage xml
        run: coverage xml

      - name: generate coverage report
        run: coverage report

      - name: upload coverage to codecov.io
        uses: codecov/codecov-action@v3

      - name: upload coverage to Codacy
        uses: codacy/codacy-coverage-reporter-action@v1
        with:
          project-token: ${{ secrets.codacy_api_token }}
          coverage-reports: coverage.xml
