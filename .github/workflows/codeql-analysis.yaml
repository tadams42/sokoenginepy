name: "CodeQL"

on:
  push:
    branches:
      - development
      - master

    paths-ignore:
      - '**/*.md'
      - '**/*.txt'
      - '**/*.yml'
      - '**/*.yaml'
      - '**/*.json'

  # schedule:
  #   - cron: '17 8 * * 3'

jobs:
  analyze:
    name: Analyze
    runs-on: ubuntu-latest
    permissions:
      actions: read
      contents: read
      security-events: write

    strategy:
      fail-fast: false
      matrix:
        language: [ 'cpp', 'python' ]
        # CodeQL supports [ 'cpp', 'csharp', 'go', 'java', 'javascript', 'python', 'ruby' ]
        # Learn more about CodeQL language support at https://aka.ms/codeql-docs/language-support

    steps:
      - name: Checkout repository
        uses: actions/checkout@v3

      - name: install build utilities
        if: ${{ matrix.language == 'cpp' }}
        run: sudo apt install -y cmake

      - name: setup vcpkg
        if: ${{ matrix.language == 'cpp' }}
        uses: lukka/run-vcpkg@v10
        with:
          vcpkgDirectory: "${{ github.workspace }}/vcpkg"
          vcpkgGitCommitId: "4826ede84084395b0f87476e48ff6d4070eba0e4"
          appendedCacheKey: "codeql"

      - name: set up Python 3.9
        uses: actions/setup-python@v4
        with:
          python-version: "3.9"
          cache: 'pip'
          cache-dependency-path: pyproject.toml

      - name: ensure latest pip
        run: python -m pip install --upgrade pip

      - name: install wheel
        run: pip install wheel

      - name: install pybind11
        if: ${{ matrix.language == 'cpp' }}
        run: pip install pybind11

      - name: setup python env for CodeQL
        # Set the `CODEQL-PYTHON` environment variable to the Python executable
        # that includes the dependencies
        run: echo "CODEQL_PYTHON=$(which python)" >> $GITHUB_ENV

      # Initializes the CodeQL tools for scanning.
      - name: Initialize CodeQL
        uses: github/codeql-action/init@v2
        with:
          languages: ${{ matrix.language }}
          config-file: ./.github/config/codeql.yml

      # Autobuild attempts to build any compiled languages  (C/C++, C#, or Java).
      # If this step fails, then you should remove it and run the build manually (see below)
      # - name: Autobuild
      #   uses: github/codeql-action/autobuild@v2

      # ‚ÑπÔ∏è Command-line programs to run using the OS shell.
      # üìö See https://docs.github.com/en/actions/using-workflows/workflow-syntax-for-github-actions#jobsjob_idstepsrun

      #   If the Autobuild fails above, remove it and uncomment the following three lines.
      #   modify them (or add more) to build your code if your project, please refer to the EXAMPLE below for guidance.

      # - run: |
      #   echo "Run, Build Application using script"
      #   ./location_of_script_within_repo/buildscript.sh

      - name: install pure py implementation
        if: ${{ matrix.language == 'python' }}
        env:
          SOKOENGINEPYEXT_SKIP: true
        run: pip install -e .

      - name: configure
        if: ${{ matrix.language == 'cpp' }}
        env:
          CMAKE_TOOLCHAIN_FILE: "${{ github.workspace }}/vcpkg/scripts/buildsystems/vcpkg.cmake"
        run: cmake --preset debug

      - name: make
        if: ${{ matrix.language == 'cpp' }}
        working-directory: build/debug
        run: cmake --build . --target sokoengine sokoenginepyext

      - name: Perform CodeQL Analysis
        uses: github/codeql-action/analyze@v2
