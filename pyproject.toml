[build-system]
requires = [
    "setuptools>=63",
    "wheel",
    "pybind11>=2.9.0",
    "ninja",
    "cmake >= 3.22",
]
build-backend = "setuptools.build_meta"

[project]
name = "sokoenginepy"
version = "1.0.3"
description = "Sokoban and variants game utilities"
readme = "README.md"
requires-python = ">=3.9"
license = { text = "GNU General Public License v3 or later (GPLv3+)" }
authors = [{ name = "Tomislav Adamic", email = "tomislav.adamic@gmail.com" }]
keywords = ["sokoban", "hexoban", "octoban", "trioban", "sokoban+", "multiban"]
classifiers = [
    "Development Status :: 5 - Production/Stable",
    "Intended Audience :: Developers",
    "License :: OSI Approved :: GNU General Public License v3 or later (GPLv3+)",
    "Programming Language :: Python",
    "Programming Language :: Python :: 3.9",
    "Programming Language :: Python :: 3.10",
    "Programming Language :: Python :: Implementation :: CPython",
    "Programming Language :: Python :: 3 :: Only",
    "Operating System :: OS Independent",
    "Topic :: Software Development :: Libraries :: Python Modules",
    "Topic :: Games/Entertainment :: Puzzle Games",
]
dependencies = ["arrow", "networkx > 2.5", "lark >= 1.1.2"]

[project.urls]
Homepage = "https://github.com/tadams42/sokoenginepy"
Source = "https://github.com/tadams42/sokoenginepy"
Documentation = "https://sokoenginepy.readthedocs.io/en/latest/"

[project.optional-dependencies]
dev = [
    "black",
    "bump2version",
    "ipython",
    "isort",
    "pytest-spec",
    "twine",
    "check-manifest",
    "coverage",
    "factory-boy",
    "faker",
    "pytest >= 3.0.0",
    "m2r2",
    "sphinx >= 1.4",
    "sphinx_rtd_theme",
]
docs = ["m2r2", "sphinx >= 1.4", "sphinx_rtd_theme"]
tests = [
    "check-manifest",
    "coverage",
    "factory-boy",
    "faker",
    "pytest >= 3.0.0",
    "pytest-spec",
    "coverage",
]

[tool.setuptools]
zip-safe = false
platforms = ["any"]
include-package-data = true

[tool.setuptools.packages.find]
where = ["src"]
include = ["sokoenginepy*"]
exclude = ["sokoenginepyext*"]

[tool.isort]
profile = "black"
skip_gitignore = true

[tool.pytest.ini_options]
minversion = "6.0"
norecursedirs = [".git", "tmp*", ".hg", ".venv", ".tox", ".eggs"]
addopts = [
    "-rxEfsw",
    "--strict-markers",
    "--tb=short",
    # Enabling --doctest-modules on src/ runs into problems when there is native
    # extension built. In that case, pytest will still try to import .py files (ie.
    # hexoban_board.py) to collect tests from them. But, this will fail to import
    # because that file works only in environments where native extension is NOT
    # built. We can't use --doctest-modules.
    # "--doctest-modules",
    "--doctest-glob=*.rst",
    "--doctest-glob=tutorial_.md",
    "--ignore=bin",
    "--ignore=build",
    "--ignore=cmake",
    "--ignore=docs/conf.py",
    "--ignore=scratchpad",
    "--ignore=src/libsokoengine",
    "--ignore=src/sokoenginepyext",
    "--ignore=tests/fixtures/test_cases",
    "--ignore=tmp",
    "--ignore=vcpkg",
]
python_classes = ["Describe*", "When_*", "describe_*"]
python_functions = ["it_*", "test_*", "then_*", "when_*"]
python_files = ["test_*", "*_spec.py", "*_test.py"]
spec_header_format = "{test_case}"

[tool.coverage.paths]
source = ["src"]

[tool.coverage.run]
branch = true
source = ["src", "tests"]

[tool.coverage.report]
show_missing = true
precision = 2
